<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGdSURBVDhPnZLPK0RRFMePlRULJUSDJmTBzuws2dmNDalJUtTIFOXHFJKJ53dk5NeCQiKJYYT8
        KCymGKFheGOQX3/F17l3TGaY8satz7vnnPu+33veu5foHyO239dKigpJVENRjVLUqyJj4jFKAyHu8SJn
        +glVOx8SkWtrQIhtHmRNPcLkfINp+11CthuNBp2X0E/6UeZ4RbnjBeWbDMfUeaXBQOzefg7j2rOk9AsR
        U7s7goGi5od9l9UFnd2HkmV/gJUAuvEHEK99vyt2ajoFNTPBIWqcFy/6ULSgyjl1jE+h6SSAovYRP4zU
        eARqOETuxB1EHKOopdKDa8mj9yic9UpETI2HQmj83tmyi0SbC4ZpDwwzHujttyCuyZfqd1HAtQJeSxxm
        c8veDzHbxA14W8i8hczuU+SPXyKP0Y14QGannEWeMMTnXbvxWxxsQ7Zcs460rmNkj7qRxaQMXXN8IWti
        LbztSNdHtFy9iqSOI6QPnkl0jKj9LQ7965VLSGg7QHKvS87EubbrGmpimke8dR9U54xSHGpSMaep9U9P
        XCebbrr5wAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="buttonCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAI3SURBVDhPlVNNaBNhEJ2D9CAo6KV6W6pnr0LMURD0VMGTaVGTmqRJGxKNMVFsD/agloreeikt
        q20TY5qm6Y+60bQatGQt9lDUCrl4KBQ0Qu77nPm2MW2Cgh88vpk3M29mZ3eJ4kUwYlQ/fXNxCi+aFDVq
        zFsKYgsnsZZjC4CuvwpzUpkSRUt7uIaTY58RLf1SEFs4iamcYM7Z0Ln5BheS30B8S5LY9UKxm326tQKK
        vKg0RGIFhFZ+onPyK98/0Dm1CW3koz1VYnnnLjK3htAyxzlPxcILZXuKqAGvsa1wVv8C8blDlZ9Xp8Cs
        Q6EvrwunDZvwFrZxTvJuGBYFZSfXXqJrcQvdjK6FLZwe25B97F2sNArkXPz8Ve3+qso7PlgAhfImsTKP
        w5C7jrrfvPFgjidZwvnsdzhH10H987XWt/IvpjfroP48zkxXFNi2/l8gMItTE5twjPMye7Ms4MvUyJsG
        eZ/b8M/of1WVGOecGN1Ax733nMu1TJjkTuHYo3UcvfsOdDVdZRFXi4g/46KedFW7U0DH4084EJmXhrxE
        XyZOV6as9gcmjjDYB3lSVQ7qLORQEFu4y5Mq5/AAfx9cwxPsfNo9z8rUrePg0KpCe2QO4jfwBFpiiWMf
        sD/x2ual5s/xzzjJnaxwF+yLGWgbLKFtoKTsvT6/e9cEyD1d4cl2/Q+i5Ms4yZMs08Vxi7eLQ2Ge4vZb
        G+xzA6iYJ1Xm0ZuKd29MduJJmXTpaY27WQpiCyexpvMbMZahdJ6nMewAAAAASUVORK5CYII=
</value>
  </data>
</root>