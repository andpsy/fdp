<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSavePassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGbSURBVDhPpdJNKARhHAbwibZ8XDgoJ7k4OChFSspFOXDkRCiSkxMpLoTko7hsEQc28pELcZDQ
        xq5l25X1ne+P7GJ3x7Yb2dldj/n/J5ODFWvqN70z7/s8b9M7gtCsx79QuMPiZY6XEET/O1xv4Xnk+XaT
        m/HGdCudu2NnniBufEFcecO7lecrlx6YUtCwjKKZS7bjlHAgSthzh3coBlAib0YoywUFE2fMYPdj88EP
        oyM882MAxbPXTCmoX0C+7kSlt0tYu/d/Sy9vUDh1oaIsF+SOnUZELcga2kcklILaWWRodyNCWS5IG7Ai
        pW8b8vH/SrrWBqIUlI1ymPx0/l/nUvutIGpBcpcJyb1mLF96WXq3idlf33Eh/1Sfbn0hEFpLhKoJCDE1
        k7645lUk9Fig23UxoXoOQuUMjj0hWJ4klc0VAKG1iZ0mpSCvfWmdPkPTZsSw1ckoTMxuQO+QVIbHIEhs
        m4FRTji692Qm1U2L9NC4eM6iy8fZiE2E1uJUDVpdPI5v3UBU04pSQNfm9XNOdsv8lqZC98Iv/+ADR6Hn
        CueFJmsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="buttonExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACwwAAAsMAT9AIsgAAAKYSURBVDhPdZN7SJNRGIc/EqKWxKRCV3PepjUvs+nyVrqY
        aemkUjObovM2KowCxcqytAtE2sXpNpUm0SjsakNLl5gmliJZQrrpUCNdkhbNXNuiv359CiljfAceXjjw
        e857bgRBMeLr3iJRNYh9yl7sVfQgvrYbcbJOJDeNQtwyjYKOWRxu+QqqPCGo1IKzJwPBcWkQFV7CiToN
        yp/14Wa/EcrheagnrDjaNkMt2HmlFd4hAkiaRqAa/4M6/W8odQvL1OvNkGi+UAsiL2jgtT0GhxoGcOPj
        PK4Pmuyo+jAP8aNJR0HHBldscXJCSGkzPLnRSJD1oqz/B869m7OjrO87UtUGR4FZGIM3EaHwK34Iz6Bo
        xFa+RlHPHE51fbOjqHsWSY06EL/EqTAfz4b5WNZStWSJ8LeiAI8lJeD6cBF1uQ3SjhnktRuXyNcakdNm
        xP7mKeyqHgJhKcmHTZoAW0EibHmJsGYKYRXxYCuW4Hk4H7zzLcggA0dap5DxYgpJTz9DcH8cEeoJhFW9
        B7EgTYclNoAkEBYhWXeTxPjDGs2BMSES6VIZctunIXwwAf5dA7h3xhC8iMoA3tU+ED8FPJhC2TCF+MLE
        Y2OBrFa+LyYD2Mh2dQP/7BNoBkbhVTkITv3oCg1j4Jb3Oh6igcFAu9tGhKdcA5MTBZfce2DfHoKPQg+2
        QreCUg//0i5HgZruAgZ5jcxMJVhbw7A+pxHeCrKD2hF75Dr4ne50FDgRxNIkK/kW3H13wDmzAZ5yPTxk
        I/bU6OBdpKV+icwDVWCy+XAWy8EiV3ev/mRPzTA8Tr6kFqxhBGGtswtoaXK4kwImKVjE7aIWmwpVoKec
        AW2bkFrw/5vSyK1srngF+sES0EJFWM0KxKp19OXgP7a61lj5S5VhAAAAAElFTkSuQmCC
</value>
  </data>
</root>